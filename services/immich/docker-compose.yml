version: "3.9"

services:
  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:release
    command: ['start.sh', 'immich']
    user: "1000:1000"
    volumes:
      - /mnt/media/Photos/Immich-Uploads:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
      - /mnt/media/Photos:/usr/src/app/external:ro
    env_file:
      - .env
    depends_on:
      - redis
      - database
    restart: always
    networks:
      - web
      - immich
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.immich.rule=Host(`photos.maxconway.com`)"
      - "traefik.http.routers.immich.entrypoints=https"
      - "traefik.http.routers.immich.tls.certresolver=letsencrypt-dns"
      - "traefik.http.services.immich.loadbalancer.server.port=2283"
      - "traefik.docker.network=web"

  immich-microservices:
    container_name: immich_microservices
    image: ghcr.io/immich-app/immich-server:release
    command: ['start.sh', 'microservices']
    user: "1000:1000"
    volumes:
      - /mnt/media/Photos/Immich-Uploads:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
      - /mnt/media/Photos:/usr/src/app/external:ro
    env_file:
      - .env
    depends_on:
      - redis
      - database
    restart: always
    networks:
      - immich

  immich-machine-learning:
    container_name: immich_machine_learning
    image: ghcr.io/immich-app/immich-machine-learning:release
    volumes:
      - model-cache:/cache
    env_file:
      - .env
    restart: always
    networks:
      - immich

  redis:
    container_name: immich_redis
    image: redis:6.2-alpine@sha256:51d6c56749a4243096327e3fb964a48ed92254357108449cb6e23999c37773c5
    restart: always
    networks:
      - immich

  database:
    container_name: immich_postgres
    image: tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always
    networks:
      - immich

volumes:
  pgdata:
  model-cache:

networks:
  web:
    external: true
    name: web
  immich:
    driver: bridge
